

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


CREATE EXTENSION IF NOT EXISTS "pgsodium";






COMMENT ON SCHEMA "public" IS 'standard public schema';



CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";






CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";






CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";





SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "public"."createListResponses" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"(),
    "categories" "text",
    "respondentName" "text"
);


ALTER TABLE "public"."createListResponses" OWNER TO "postgres";


COMMENT ON TABLE "public"."createListResponses" IS 'Responses from groople create list';



ALTER TABLE "public"."createListResponses" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."createListResponses_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."dailyChallenge" (
    "id" bigint NOT NULL,
    "letter" "text" NOT NULL,
    "categories" "json" NOT NULL,
    "date" "date" NOT NULL,
    "creator" "text",
    "plays" bigint DEFAULT '0'::bigint NOT NULL,
    "scores" "jsonb" DEFAULT '{"0": 0, "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0, "11": 0, "12": 0}'::"jsonb" NOT NULL
);


ALTER TABLE "public"."dailyChallenge" OWNER TO "postgres";


COMMENT ON TABLE "public"."dailyChallenge" IS 'The categories and letter for each daily challenge';



COMMENT ON COLUMN "public"."dailyChallenge"."scores" IS 'Everyone''s score, all in 1 place :D';



ALTER TABLE "public"."dailyChallenge" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."dailyChallenge_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."groupWaitlist" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"(),
    "email" "text" NOT NULL
);


ALTER TABLE "public"."groupWaitlist" OWNER TO "postgres";


COMMENT ON TABLE "public"."groupWaitlist" IS 'waitlist for group features';



ALTER TABLE "public"."groupWaitlist" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."groupWaitlist_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."users" (
    "id" integer NOT NULL,
    "email" character varying(255) NOT NULL,
    "playcount" integer DEFAULT 0
);


ALTER TABLE "public"."users" OWNER TO "postgres";


CREATE SEQUENCE IF NOT EXISTS "public"."users_id_seq"
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "public"."users_id_seq" OWNER TO "postgres";


ALTER SEQUENCE "public"."users_id_seq" OWNED BY "public"."users"."id";



ALTER TABLE ONLY "public"."users" ALTER COLUMN "id" SET DEFAULT "nextval"('"public"."users_id_seq"'::"regclass");



ALTER TABLE ONLY "public"."createListResponses"
    ADD CONSTRAINT "createListResponses_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."dailyChallenge"
    ADD CONSTRAINT "dailyChallenge_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."groupWaitlist"
    ADD CONSTRAINT "groupWaitlist_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."users"
    ADD CONSTRAINT "users_pkey" PRIMARY KEY ("id");



ALTER TABLE "public"."createListResponses" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."dailyChallenge" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."groupWaitlist" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."users" ENABLE ROW LEVEL SECURITY;




ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";


GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";


















































































































































































































GRANT ALL ON TABLE "public"."createListResponses" TO "anon";
GRANT ALL ON TABLE "public"."createListResponses" TO "authenticated";
GRANT ALL ON TABLE "public"."createListResponses" TO "service_role";



GRANT ALL ON SEQUENCE "public"."createListResponses_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."createListResponses_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."createListResponses_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."dailyChallenge" TO "anon";
GRANT ALL ON TABLE "public"."dailyChallenge" TO "authenticated";
GRANT ALL ON TABLE "public"."dailyChallenge" TO "service_role";



GRANT ALL ON SEQUENCE "public"."dailyChallenge_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."dailyChallenge_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."dailyChallenge_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."groupWaitlist" TO "anon";
GRANT ALL ON TABLE "public"."groupWaitlist" TO "authenticated";
GRANT ALL ON TABLE "public"."groupWaitlist" TO "service_role";



GRANT ALL ON SEQUENCE "public"."groupWaitlist_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."groupWaitlist_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."groupWaitlist_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."users" TO "anon";
GRANT ALL ON TABLE "public"."users" TO "authenticated";
GRANT ALL ON TABLE "public"."users" TO "service_role";



GRANT ALL ON SEQUENCE "public"."users_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."users_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."users_id_seq" TO "service_role";



ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";






























RESET ALL;
